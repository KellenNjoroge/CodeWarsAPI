{"current_challenge": {"slug": "text-align-justify", "rank": -4, "tags": ["Algorithms", "Strings", "Data Types", "Formatting", "Logic"], "name": "Text align justify", "session": {"project_id": "5647da53844573d54b000007", "code": "def make_line(line_arr, width, base_line_length):\n    print line_arr\n    num_words = len(line_arr)\n    current_word_idx = 0\n    line_length = 0\n    while line_length < width:\n        line_arr[current_word_idx] = line_arr[current_word_idx] + \" \"\n        line_length += len(line_arr[current_word_idx])\n        current_word_idx = current_word_idx + 1\n    print line_arr.join('') \n\ndef justify(text, width):\n    lines = [] \n    current_line = []\n    line_length_with_space = 0\n    line_length_no_space = 0\n#     line_word_length = 0\n    for word in text.split(' '):\n        # count the word along with at least one space\n        line_length_with_space += len(word) + 1\n        line_length_no_space += len(word)\n#         line_word_length += 1\n        if line_length_with_space < width:\n          current_line.append(word)\n        else:\n            line_length_with_space = len(word) + 1\n            line_length_no_space -= len(word)\n\n            make_line(lines, width, line_length_no_space)\n            line_length_no_space = len(word)\n", "solution_id": "5647da547e3dee453c000080", "setup": "def justify(text, width):\n    # your code here", "example_fixture": "test.expect_equals(justify('123 45 6', 7), '123 45\\n6')"}, "description": "Your task in this Kata is to emulate text justification in monospace font. You will be given a single-lined text and the expected justification width. The longest word will never be greater than this width.\n\nHere are the rules:\n\n  * Use spaces to fill in the gaps between words.\n  * Each line should contain as many words as possible.\n  * Use '\\n' to separate lines.\n  * Gap between words can't differ by more than one space.\n  * Lines should end with a word not a space.\n  * '\\n' is not included in the length of a line.\n  * Large gaps go first, then smaller ones: 'Lorem---ipsum---dolor--sit--amet' (3, 3, 2, 2 spaces).\n  * Last line should not be justified, use only one space between words.\n  * Last line should not contain '\\n'\n  * Strings with one word do not need gaps ('somelongword\\n').\n\nExample with width=30:\n\n```\nLorem  ipsum  dolor  sit amet,\nconsectetur  adipiscing  elit.\nVestibulum    sagittis   dolor\nmauris,  at  elementum  ligula\ntempor  eget.  In quis rhoncus\nnunc,  at  aliquet orci. Fusce\nat   dolor   sit   amet  felis\nsuscipit   tristique.   Nam  a\nimperdiet   tellus.  Nulla  eu\nvestibulum    urna.    Vivamus\ntincidunt  suscipit  enim, nec\nultrices   nisi  volutpat  ac.\nMaecenas   sit   amet  lacinia\narcu,  non dictum justo. Donec\nsed  quam  vel  risus faucibus\neuismod.  Suspendisse  rhoncus\nrhoncus  felis  at  fermentum.\nDonec lorem magna, ultricies a\nnunc    sit    amet,   blandit\nfringilla  nunc. In vestibulum\nvelit    ac    felis   rhoncus\npellentesque. Mauris at tellus\nenim.  Aliquam eleifend tempus\ndapibus. Pellentesque commodo,\nnisi    sit   amet   hendrerit\nfringilla,   ante  odio  porta\nlacus,   ut   elementum  justo\nnulla et dolor.\n```\n\nAlso you can always take a look at how justification works in your text editor or directly in HTML (css: text-align: justify).\n\nHave fun :)\n\n", "href": null, "averageCompletion": null}}